class Solution:
    def pacificAtlantic(self, height):
        if heights is None:
            return

        result = []

        for y in range(len(heights[0])):
            for x in range(len(heights)):
                visited = set()

                reach_pacific, reach_atlantic = self.dfs(heights, x, y, visited)

                if (reach_pacific is True) and (reach_atlantic is True):
                    result.append([x, y])

        return result                    

    def dfs(self, heights, x, y, visited):
        if (x == 0) or (y == 0):
            reach_pacific = True
        else:
            reach_pacific = False
        if (x == len(heights)-1) or (y == len(heights[0])-1):
            reach_atlantic = True
        else:
            reach_atlantic = False

        directions = [(+1, 0), (-1, 0), (0, +1), (0, -1)]
        for direct in directions:
            cur_x, cur_y = x + direct[0], y + direct[1]
            if (0 <= cur_x < len(heights)) and (0 <= cur_y < len(heights[0])) and ((cur_x, cur_y) not in visited) and (heights[cur_x][cur_y] <= heights[x][y]):
                visited.add((cur_x, cur_y))

                # print(f"Current Height: {heights[cur_x][cur_y]}")
                # print(f"Previous Height: {heights[x][y]}")
                # print(f"{x}, {y}: Pacific: {reach_pacific}")
                # print(f"{x}, {y}: Atlantic: {reach_atlantic}")

                p_found, a_found = self.dfs(heights, cur_x, cur_y, visited)

                reach_pacific = p_found or reach_pacific
                reach_atlantic = a_found or reach_atlantic

        return reach_pacific, reach_atlantic


solution = Solution()
print(solution.pacificAtlantic([[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]))      # [[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]
print(solution.pacificAtlantic([[1]]))                                                              # [[0,0]]
print(solution.pacificAtlantic([[1,1],[1,1],[1,1]]))                                                # [[0,0],[1,0],[2,0],[0,1],[1,1],[2,1]]
print(solution.pacificAtlantic([[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,20],[71,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,90,21],[70,135,192,193,194,195,196,197,198,199,200,201,202,203,204,205,152,91,22],[69,134,191,240,241,242,243,244,245,246,247,248,249,250,251,206,153,92,23],[68,133,190,239,280,281,282,283,284,285,286,287,288,289,252,207,154,93,24],[67,132,189,238,279,312,313,314,315,316,317,318,319,290,253,208,155,94,25],[66,131,188,237,278,311,336,337,338,339,340,341,320,291,254,209,156,95,26],[65,130,187,236,277,310,335,352,353,354,355,342,321,292,255,210,157,96,27],[64,129,186,235,276,309,334,351,360,361,356,343,322,293,256,211,158,97,28],[63,128,185,234,275,308,333,350,359,358,357,344,323,294,257,212,159,98,29],[62,127,184,233,274,307,332,349,348,347,346,345,324,295,258,213,160,99,30],[61,126,183,232,273,306,331,330,329,328,327,326,325,296,259,214,161,100,31],[60,125,182,231,272,305,304,303,302,301,300,299,298,297,260,215,162,101,32],[59,124,181,230,271,270,269,268,267,266,265,264,263,262,261,216,163,102,33],[58,123,180,229,228,227,226,225,224,223,222,221,220,219,218,217,164,103,34],[57,122,179,178,177,176,175,174,173,172,171,170,169,168,167,166,165,104,35],[56,121,120,119,118,117,116,115,114,113,112,111,110,109,108,107,106,105,36],[55,54,53,52,51,50,49,48,47,46,45,44,43,42,41,40,39,38,37]]))
                                                                                                    # [[0,18],[1,0],[1,1],[1,2],[1,3],[1,4],[1,5],[1,6],[1,7],[1,8],[1,9],[1,10],[1,11],[1,12],[1,13],[1,14],[1,15],[1,16],[1,17],[1,18],[2,0],[2,1],[2,2],[2,3],[2,4],[2,5],[2,6],[2,7],[2,8],[2,9],[2,10],[2,11],[2,12],[2,13],[2,14],[2,15],[2,16],[2,17],[2,18],[3,0],[3,1],[3,2],[3,3],[3,4],[3,5],[3,6],[3,7],[3,8],[3,9],[3,10],[3,11],[3,12],[3,13],[3,14],[3,15],[3,16],[3,17],[3,18],[4,0],[4,1],[4,2],[4,3],[4,4],[4,5],[4,6],[4,7],[4,8],[4,9],[4,10],[4,11],[4,12],[4,13],[4,14],[4,15],[4,16],[4,17],[4,18],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[5,8],[5,9],[5,10],[5,11],[5,12],[5,13],[5,14],[5,15],[5,16],[5,17],[5,18],[6,0],[6,1],[6,2],[6,3],[6,4],[6,5],[6,6],[6,7],[6,8],[6,9],[6,10],[6,11],[6,12],[6,13],[6,14],[6,15],[6,16],[6,17],[6,18],[7,0],[7,1],[7,2],[7,3],[7,4],[7,5],[7,6],[7,7],[7,8],[7,9],[7,10],[7,11],[7,12],[7,13],[7,14],[7,15],[7,16],[7,17],[7,18],[8,0],[8,1],[8,2],[8,3],[8,4],[8,5],[8,6],[8,7],[8,8],[8,9],[8,10],[8,11],[8,12],[8,13],[8,14],[8,15],[8,16],[8,17],[8,18],[9,0],[9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[9,7],[9,8],[9,9],[9,10],[9,11],[9,12],[9,13],[9,14],[9,15],[9,16],[9,17],[9,18],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[10,7],[10,8],[10,9],[10,10],[10,11],[10,12],[10,13],[10,14],[10,15],[10,16],[10,17],[10,18],[11,0],[11,1],[11,2],[11,3],[11,4],[11,5],[11,6],[11,7],[11,8],[11,9],[11,10],[11,11],[11,12],[11,13],[11,14],[11,15],[11,16],[11,17],[11,18],[12,0],[12,1],[12,2],[12,3],[12,4],[12,5],[12,6],[12,7],[12,8],[12,9],[12,10],[12,11],[12,12],[12,13],[12,14],[12,15],[12,16],[12,17],[12,18],[13,0],[13,1],[13,2],[13,3],[13,4],[13,5],[13,6],[13,7],[13,8],[13,9],[13,10],[13,11],[13,12],[13,13],[13,14],[13,15],[13,16],[13,17],[13,18],[14,0],[14,1],[14,2],[14,3],[14,4],[14,5],[14,6],[14,7],[14,8],[14,9],[14,10],[14,11],[14,12],[14,13],[14,14],[14,15],[14,16],[14,17],[14,18],[15,0],[15,1],[15,2],[15,3],[15,4],[15,5],[15,6],[15,7],[15,8],[15,9],[15,10],[15,11],[15,12],[15,13],[15,14],[15,15],[15,16],[15,17],[15,18],[16,0],[16,1],[16,2],[16,3],[16,4],[16,5],[16,6],[16,7],[16,8],[16,9],[16,10],[16,11],[16,12],[16,13],[16,14],[16,15],[16,16],[16,17],[16,18],[17,0],[17,1],[17,2],[17,3],[17,4],[17,5],[17,6],[17,7],[17,8],[17,9],[17,10],[17,11],[17,12],[17,13],[17,14],[17,15],[17,16],[17,17],[17,18],[18,0],[18,1],[18,2],[18,3],[18,4],[18,5],[18,6],[18,7],[18,8],[18,9],[18,10],[18,11],[18,12],[18,13],[18,14],[18,15],[18,16],[18,17],[18,18]]
print(solution.pacificAtlantic([[19,16,16,12,14,0,17,11,2,0,18,9,13,16,8,8,8,13,17,9,16,9,4,7,1,19,10,7,0,15],[0,11,4,14,9,0,6,13,16,5,19,9,4,5,4,12,0,13,0,7,9,12,13,15,3,7,4,9,15,1],[13,14,12,12,12,16,6,15,13,1,8,9,11,14,14,10,19,11,10,0,5,18,4,12,7,13,17,15,18,1],[16,14,19,5,8,2,11,17,7,1,4,6,5,18,7,15,6,19,18,12,1,14,2,2,0,9,15,14,13,19],[17,4,12,9,12,10,12,10,4,5,12,7,2,12,18,10,10,8,6,1,5,13,10,3,5,3,11,4,8,11],[8,19,18,9,6,2,7,3,19,6,0,17,9,12,11,1,15,11,18,1,8,11,1,11,16,7,8,17,15,0],[7,0,5,11,1,7,12,18,12,1,5,2,11,7,18,12,0,11,9,18,5,2,3,1,1,1,8,14,19,5],[2,14,2,16,17,19,10,16,1,16,16,3,19,12,13,17,19,12,16,10,16,8,16,12,6,12,13,17,9,12],[8,1,10,5,7,0,15,19,8,15,4,12,18,18,13,11,5,2,8,3,15,4,3,7,7,14,15,11,6,16],[0,5,13,19,1,1,2,4,16,2,16,9,15,15,10,10,18,11,17,1,5,14,5,19,7,0,13,7,13,7],[11,6,16,12,4,2,9,11,17,19,12,10,6,16,17,5,1,18,19,7,15,1,14,0,3,19,7,3,4,13],[4,11,8,10,10,19,7,18,4,2,2,14,6,9,18,14,2,16,5,3,19,17,4,3,7,1,12,2,4,3],[14,16,3,11,13,13,6,16,18,0,17,19,4,1,14,12,4,17,5,19,8,13,15,3,15,4,1,14,12,10],[13,2,12,2,16,12,19,10,19,12,19,14,12,17,16,3,13,7,3,15,16,7,10,15,14,10,6,5,2,18]]))
                                                                                                    # [[0,29],[1,28],[2,28],[12,0],[12,1],[13,0]]